/* soapClient.cpp
   Generated by gSOAP 2.8.17r from OBD.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.17r 2014-07-10 16:46:39 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_OBD__GetSpeed(struct soap *soap, const char *soap_endpoint, const char *soap_action, int &speed)
{	struct OBD__GetSpeed soap_tmp_OBD__GetSpeed;
	struct OBD__GetSpeedResponse *soap_tmp_OBD__GetSpeedResponse;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_OBD__GetSpeed(soap, &soap_tmp_OBD__GetSpeed);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_OBD__GetSpeed(soap, &soap_tmp_OBD__GetSpeed, "OBD:GetSpeed", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_OBD__GetSpeed(soap, &soap_tmp_OBD__GetSpeed, "OBD:GetSpeed", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&speed)
		return soap_closesock(soap);
	soap_default_int(soap, &speed);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_OBD__GetSpeedResponse = soap_get_OBD__GetSpeedResponse(soap, NULL, "OBD:GetSpeedResponse", "");
	if (!soap_tmp_OBD__GetSpeedResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	speed = soap_tmp_OBD__GetSpeedResponse->speed;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
